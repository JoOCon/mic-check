// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login tests renders the Login with the correct props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    activeUser={
        Object {
            "email": "THanks@hanks.com",
            "location": "20 McAllister St, San Francisco, CA",
            "password": "password",
            "userName": "Tom Hanks",
          }
    }
    setActiveUser={[Function]}
    users={
        Array [
            Object {
              "email": "THanks@hanks.com",
              "location": "20 McAllister St, San Francisco, CA",
              "password": "password",
              "userName": "Tom Hanks",
            },
            Object {
              "email": "JHanks@hanks.com",
              "location": "20 McAllister St, San Francisco, CA",
              "password": "password",
              "userName": "Jim Hanks",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          className="user-login"
          onSubmit={[Function]}
>
          <h2
                    className="log-header"
          >
                    Login
          </h2>
          <input
                    className="input-field"
                    name="email"
                    onChange={[Function]}
                    placeholder="email"
                    type="email"
                    value=""
          />
          <input
                    className="input-field"
                    name="password"
                    onChange={[Function]}
                    placeholder="password"
                    type="password"
                    value=""
          />
          <button
                    className="Login-button"
          >
                    Login
          </button>
</form>,
        false,
        <Link
          replace={false}
          to="/SignUp"
>
          <button
                    className="sign-up"
          >
                    Sign Up
          </button>
</Link>,
        <Link
          replace={false}
          to="/"
>
          <button
                    className="home"
          >
                    Home
          </button>
</Link>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2
              className="log-header"
>
              Login
</h2>,
            <input
              className="input-field"
              name="email"
              onChange={[Function]}
              placeholder="email"
              type="email"
              value=""
/>,
            <input
              className="input-field"
              name="password"
              onChange={[Function]}
              placeholder="password"
              type="password"
              value=""
/>,
            <button
              className="Login-button"
>
              Login
</button>,
          ],
          "className": "user-login",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Login",
              "className": "log-header",
            },
            "ref": null,
            "rendered": "Login",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "input-field",
              "name": "email",
              "onChange": [Function],
              "placeholder": "email",
              "type": "email",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "input-field",
              "name": "password",
              "onChange": [Function],
              "placeholder": "password",
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Login",
              "className": "Login-button",
            },
            "ref": null,
            "rendered": "Login",
            "type": "button",
          },
        ],
        "type": "form",
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <button
            className="sign-up"
>
            Sign Up
</button>,
          "replace": false,
          "to": "/SignUp",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign Up",
            "className": "sign-up",
          },
          "ref": null,
          "rendered": "Sign Up",
          "type": "button",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <button
            className="home"
>
            Home
</button>,
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Home",
            "className": "home",
          },
          "ref": null,
          "rendered": "Home",
          "type": "button",
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            className="user-login"
            onSubmit={[Function]}
>
            <h2
                        className="log-header"
            >
                        Login
            </h2>
            <input
                        className="input-field"
                        name="email"
                        onChange={[Function]}
                        placeholder="email"
                        type="email"
                        value=""
            />
            <input
                        className="input-field"
                        name="password"
                        onChange={[Function]}
                        placeholder="password"
                        type="password"
                        value=""
            />
            <button
                        className="Login-button"
            >
                        Login
            </button>
</form>,
          false,
          <Link
            replace={false}
            to="/SignUp"
>
            <button
                        className="sign-up"
            >
                        Sign Up
            </button>
</Link>,
          <Link
            replace={false}
            to="/"
>
            <button
                        className="home"
            >
                        Home
            </button>
</Link>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h2
                className="log-header"
>
                Login
</h2>,
              <input
                className="input-field"
                name="email"
                onChange={[Function]}
                placeholder="email"
                type="email"
                value=""
/>,
              <input
                className="input-field"
                name="password"
                onChange={[Function]}
                placeholder="password"
                type="password"
                value=""
/>,
              <button
                className="Login-button"
>
                Login
</button>,
            ],
            "className": "user-login",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Login",
                "className": "log-header",
              },
              "ref": null,
              "rendered": "Login",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input-field",
                "name": "email",
                "onChange": [Function],
                "placeholder": "email",
                "type": "email",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input-field",
                "name": "password",
                "onChange": [Function],
                "placeholder": "password",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Login",
                "className": "Login-button",
              },
              "ref": null,
              "rendered": "Login",
              "type": "button",
            },
          ],
          "type": "form",
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button
              className="sign-up"
>
              Sign Up
</button>,
            "replace": false,
            "to": "/SignUp",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign Up",
              "className": "sign-up",
            },
            "ref": null,
            "rendered": "Sign Up",
            "type": "button",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button
              className="home"
>
              Home
</button>,
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Home",
              "className": "home",
            },
            "ref": null,
            "rendered": "Home",
            "type": "button",
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "disableLifecycleMethods": true,
    "hydrateIn": undefined,
  },
}
`;
